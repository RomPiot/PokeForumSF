{% extends 'base.html.twig' %}

{% block title %}
	{{ topic.title }}
	- PokeForum
{% endblock %}


{% block stylesheets %}
	<link rel="stylesheet" href=" {{ asset('css/styleTopic.css') }}">
{% endblock %}

{% block content %}

	<div id="pokemonLogoContainer">

		<img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/1024px-International_Pok%C3%A9mon_logo.svg.png" alt="">

	</div>
	<div id="titreAndContent">

		<a href="{{ path('user_profile_show', {id: topic.author.id}) }}">
			<div class="avatar-link">
				<p class="font-weight-bold">{{ topic.author.username }}</p>
				<img class="avatar" src="{{ topic.author.avatar }}" alt="">
				<p>{{ topic.author.rank }}</p>
				<div class="topic-badge-container">
					{% for badge in topic.author.badges %}
						<img style="width: 20px;height:20px;object-fit: contain;" src="{{ asset('images/pokemon_items/'~ badge.image ) }}" alt="">
					{% endfor %}
				</div>
			</div>
		</a>

		<div class="d-flex flex-column justify-content-between w-100">
			<div>
				<div class="d-flex justify-content-between align-items-center">
					<h1>{{ topic.title }}</h1>

					{% if topic.author == app.user or is_granted('ROLE_ADMIN')  %}
						<div class="topic-delete-and-edit-button">
							<a class="button-edit" href="{{ path('topic_edit', {'id' : topic.id}) }}">Editer</a>
							<a class="button-delete" href="{{ path('topic_remove', {'id' : topic.id}) }}">Supprimer</a>
						</div>
					{% endif %}

				</div>
				<p class="topicContent">{{ topic.content }}</p>
			</div>
			<p class="dateTopic font-italic text-right">
				Le
				{{ topic.createdat |date("d M Y à H:i", "Europe/Paris") }}
			</p>
		</div>

	</div>

	{% for comment in comments %}
		<div class="comment" data-id="{{ comment.id }}">

            {% if comment.author.pokedex|length == 151 %}
            <a class="avatar-link final-stage" href="{{ path('user_profile_show', {id: comment.author.id}) }}">
                {% else %}
                <a class="avatar-link " href="{{ path('user_profile_show', {id: comment.author.id}) }}">
                    {% endif %}
                    <p class="font-weight-bold">{{ comment.author.username | capitalize }}</p>
                    <p>
                        <img class="avatar" src="{{ comment.author.avatar }}" alt="">
                    <p>{{ comment.author.rank }}</p>
                    <div class="topic-badge-container">

						{% for authorBadge in comment.author.badges %}
							<img style="width: 20px;height:20px;object-fit: contain;" src="{{ asset('images/pokemon_items/'~ authorBadge.image ) }}" alt="">
						{% endfor %}
					</div>
				</p>
			</a>
			<div class="d-flex flex-column w-100 full-comment-content">
				<div class="leftSideComment">
					<div class="d-flex justify-content-end align-items-center"></div>

					<div class="d-flex flex-column justify-content-between h-100">
						<p class="commentContent">{{ comment.content }}</p>

					</div>
				</div>
				<div class="w-100 d-flex flex-row justify-content-between editAndDateComment">
					<div class="container-delete-and-edit-button">
						{% if comment.author == app.user or is_granted('ROLE_ADMIN')  %}
							<a class="comment-edit button-edit" href="#">Editer</a>
							<a class="button-delete" href="{{ path('comment_remove', {'id' : comment.id}) }}">Supprimer</a>
						{% endif %}
					</div>
					<p class="dateTopic font-italic text-right">
						Le
						{{ comment.createdat |date("d M Y à H:i", "Europe/Paris") }}
					</p>
				</div>
			</div>
		</div>
	{% endfor %}

	{% if topic.isActive == true and commentForm is defined %}
		{{ form(commentForm) }}
	{% endif %}


{% endblock %}

{% block javascripts %}
	<script>
		// $(function () {
			var edition = false;
			var lastContent = "";

			$(".button-delete").on("click", function(event) {
				let activeComment = $(this).parents(".full-comment-content").find(".commentContent")
				let editBtn = $(this).parents(".full-comment-content").find(".button-edit");
				if (edition == true) {
					event.preventDefault();

					edition = false;
					editBtn.text("Editer");
					$(this).text("Supprimer");
					activeComment.prop("contenteditable", false);
					activeComment.text(lastContent);

					return false;
				}
			})

			$(".comment-edit").on("click", function (event) {
				event.preventDefault();
				let activeComment = $(this).parents(".full-comment-content").find(".commentContent");
				let supprBtn = $(this).parents(".full-comment-content").find(".button-delete");
				let activeCommentText = activeComment.text();
				let commentId = activeComment.parents(".comment").attr("data-id");
				lastContent = activeComment.text();

				if (edition == false) {
					edition = true;
					$(this).text("Valider");
					supprBtn.text("Annuler la modification");
					
					activeComment.prop("contenteditable", true);
					activeComment.focus();
				} else {
					
					edition = false;
					$(this).text("Editer");
					supprBtn.text("Supprimer");
					activeComment.prop("contenteditable", false);
					activeComment.text(lastContent);

					

					axios.post("{{ path('comment_edit') }}", {
						comment_id: commentId,
						comment_content: activeCommentText
					});

				}
			});

			$(".commentContent").on("keydown", function (event) {
				let activeCommentText = $(this).text();
				let editBtn = $(this).parents(".full-comment-content").find(".comment-edit");
				let supprBtn = $(this).parents(".full-comment-content").find(".button-delete");


			if ((event.key == 'Enter') || (event.key == 'Escape')) {
				$(this).prop("contenteditable", false);
				edition = false;
				editBtn.text("Editer");
				supprBtn.text("Supprimer");
			}

			if (event.key == 'Escape') {
				$(this).text(lastContent);
			}

			if (event.key == 'Enter') {
				let commentId = $(this).parents(".comment").attr("data-id");


				axios.post("{{ path('comment_edit') }}", {
					comment_id: commentId,
					comment_content: activeCommentText
				});
			}
			});
		// });
	</script>
{% endblock %}
