document.addEventListener("DOMContentLoaded",(function(){let onHunt=!1,successCatch=!1;const body=document.querySelector("body"),userId=body.getAttribute("data-user-id");let userPokeball=body.getAttribute("data-user-pokeball");const pokemonMainContainer=document.querySelector(".pokemon-main-container"),cursorPokeball=document.querySelector("#cursor-pokeball"),huntBtn=document.querySelector("a.hunt-btn"),pokemon=document.querySelector("a.pokemon");let pokemonImage=document.querySelector("img.pokemon-image");const pokeballCatching=document.querySelector(".pokeball-catching"),pokeballCatch=document.querySelector(".pokeball-catch");let pokemonData;function isCatch(isCatch=!1){$(".pokemon").stop(),$(".pokeball-loader").css({width:"0px",height:"0px"}),onHunt=!1,setTimeout(()=>{pokeballCatching.classList.remove("no-active"),isCatch?pokeballCatch.classList.add("pokeball-animation-success"):pokeballCatch.classList.add("pokeball-animation-fail")},1e3),setTimeout(()=>{pokeballCatching.classList.add("no-active"),$(".pokemon").animate({opacity:0},500)},7e3),setTimeout(()=>{cursorPokeball.classList.add("no-active"),pokemonMainContainer.classList.add("no-active"),body.style.cursor="inherit",pokemon.classList.add("no-active")},7500)}function escape(){$(".pokemon").stop(),onHunt=!1,pokeballCatching.classList.remove("no-active"),pokeballCatching.classList.add("no-active"),$(".pokemon").animate({opacity:0},500),cursorPokeball.classList.add("no-active"),pokemonMainContainer.classList.add("no-active"),body.style.cursor="inherit",pokemon.classList.add("no-active")}function makeNewPosition(){var h=$(window).height()-50,w=$(window).width()-50,nh,nw;return[Math.floor(Math.random()*h),Math.floor(Math.random()*w)]}function movePokemon(myclass,difficulty){var newq=makeNewPosition();duration=1400-100*difficulty,$(myclass).animate({top:newq[0],left:newq[1]},duration,(function(){movePokemon(myclass,difficulty)}))}document.addEventListener("mousemove",(function(event){let x=event.clientX,y=event.clientY;cursorPokeball.style.left=x+"px",cursorPokeball.style.top=y+"px"})),huntBtn&&huntBtn.addEventListener("click",(function(event){event.preventDefault(),body.style.cursor="none",cursorPokeball.classList.remove("no-active"),pokemonMainContainer.classList.remove("no-active"),pokeballCatch.classList.remove("pokeball-animation-success"),pokeballCatch.classList.remove("pokeball-animation-fail"),userPokeball-=1,$(".pokeball-container").children().first().addClass("no-active"),setTimeout(()=>{$(".pokeball-container").children().first().remove()},1e3),0==userPokeball&&(huntBtn.classList.add("no-active"),setTimeout(()=>{huntBtn.remove()},1e3));const url=this.href;onHunt=!0,$(".pokeball-loader").css({width:"60px",height:"60px"}),axios.post(url,{}).then((function(response){pokemonData=JSON.parse(response.data.content),console.log(pokemonData),pokemonImage.setAttribute("src","/images/pokemons/"+pokemonData.idPokemon+".png"),pokemon.setAttribute("data-id",pokemonData.idPokemon);let escapeTime=1e3*(15-pokemonData.difficulty);setTimeout(()=>{let pokemonHeight,pokemonWidth;setTimeout(()=>(escape(),!1),escapeTime),movePokemon(".pokemon",pokemonData.difficulty),pokemonImage.offsetHeight>pokemonImage.offsetWidth?(pokemonImage.style.height="90px",pokemonImage.style.width="auto"):(pokemonImage.style.width="90px",pokemonImage.style.height="auto"),pokemon.classList.remove("no-active"),$(".pokemon").animate({opacity:1},500)},20)}))})),document.addEventListener("click",(function(event){if(1==onHunt&&!event.target.classList.contains("hunt-btn")){if(successCatch=!1,event.target.classList.contains("pokemon-image")){event.preventDefault();const url=pokemon.getAttribute("href");axios.post(url,{pokemon_id:pokemon.getAttribute("data-id")}).then((function(response){console.log(response)})),successCatch=!0}isCatch(successCatch)}}))}));